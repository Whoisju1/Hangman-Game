/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_main_scss__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_main_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__style_main_scss__);\n// import styles\n\n\nconst HANGMAN = {};\n\n// -------------------------NAMESPACE -------------------------\n(namespace => {\n  // -----------------------WORD CLASS------------------------\n  // used to make words for game\n  class Word {\n    constructor(word, hint) {\n      this.word = word.toLowerCase();\n      this.hint = hint;\n      this.isMatched = this.isMatched.bind(this);\n      this.isIncluded = this.isIncluded.bind(this);\n    }\n\n    // method to test if user letter choice is present in word\n    isIncluded(char) {\n      return this.word.includes(char.toLowerCase().trim());\n    }\n\n    // method to test if word is correct\n    isMatched(letters) {\n      return this.word === letters.toLowerCase().trim();\n    }\n  }\n\n  // ----------------------WORD FACTORY------------------------\n  // make single word or an array of words and make it a property of HANGMAN\n  // it takes an a single string, multiple stings, or an array of stings as an argument\n  namespace.wordFactory = (...word) => {\n    // if argument is an array make it an array by destructuring it\n    if (Array.isArray(...word)) [word] = word;\n    // iterate through an array of strings and return an array of objects\n    if (word.length > 1) return word.map(item => new Word(...item));\n\n    // if argument is a single string destructure the array and output a string\n    const [singleWord] = word;\n    // make a single object\n    return new Word(singleWord);\n  };\n\n  // ------------------ARRAY ITERATOR ----------------------------------\n\n  // loop through array of words and execute callback function using recursive function\n  const arrayIterator = (wordList, cb) => {\n    const [a, ...b] = wordList;\n    cb(a);\n    if (wordList.length === 1) return;\n    arrayIterator(b, cb);\n  };\n\n  namespace.arrayIterator = arrayIterator;\n\n  // This method takes in a string and outputs a string of underscores\n  // proportionate to the number of characters contained in the string\n  const makeDashes = answer => {\n    const dashed = [];\n    (function looper(answer) {\n      const [a, ...b] = [...answer];\n\n      dashed.push('_');\n      if (answer.length === 1) return;\n      looper(b);\n    })(answer);\n    return dashed.join('');\n  };\n\n  namespace.makeDashes = makeDashes;\n\n  // this is a method used for DOM manipulation\n  // the names of the functions within it borrow from jQuery\n  const makeElem = (elemName = 'div') => {\n    const elem = global.document.createElement(elemName);\n\n    // insert element into another element\n    elem.appendTo = parent => {\n      parent.appendChild(elem);\n      return elem;\n    };\n\n    // add text to element\n    elem.text = text => {\n      elem.textContent = text;\n      return elem;\n    };\n\n    // add HTML to element\n    elem.html = html => {\n      elem.innerHTML = html;\n      return elem;\n    };\n\n    // empty the element of all it's content\n    elem.empty = () => {\n      elem.innerHTML = '';\n      return elem;\n    };\n\n    // hide the element\n    elem.hide = () => {\n      elem.style.visibility = 'hidden';\n      return elem;\n    };\n\n    // show element\n    elem.show = () => {\n      elem.style.visibility = 'visible';\n      return elem;\n    };\n\n    // add CSS class to element\n    elem.addClass = className => {\n      elem.classList.add(className);\n      return elem;\n    };\n\n    // remove CSS class from element\n    elem.removeClass = className => {\n      elem.classList.remove(className);\n      return elem;\n    };\n\n    return elem;\n  };\n\n  namespace.makeElem = makeElem;\n\n  // this takes in two arguments, the answer and the user's guess\n  // if the letter guess is present in the answer it outputs an array of objects with the\n  // letter as a string and the index at which the letter is present in the answer string\n  const guesses = (answer, letterGuessed) =>\n  // spread the characters in the string and place them in an array\n  // then iterate through them using the reduce function which returns a array that contains\n  // all the letter guessed and the the index at which it is matched in the answers string\n  [...answer].reduce((arr, letter, index) => {\n    if (letterGuessed === letter) {\n      const obj = {\n        key: letterGuessed,\n        index\n      };\n      arr.push(obj);\n    }\n    return arr;\n  }, []);\n\n  namespace.guesses = guesses;\n\n  // replaces characters in a string where with provided replacement character \n  // and index where it should be placed\n  // it receives two arguments, a string and an array of objects containing \n  // a character the user guessed and it's index in the answer\n  // all characters provided are contained in the answer\n  const replace = (word, input) => {\n    const resultStr = input.reduce((previous, guess) => {\n      // insert each letter according to it's provided index\n      if (guess.index !== -1) {\n        return previous.substring(0, guess.index) + guess.key + previous.substring(guess.index + 1, previous.length);\n      }\n    }, word);\n\n    // return altered string as output\n    return resultStr;\n  };\n\n  namespace.replace = replace;\n\n  // takes in a number increments it by one and returns the incremented number\n  const inc = (num = -1) => num + 1;\n\n  namespace.inc = inc;\n})(HANGMAN);\n\nconst gameWords = HANGMAN.wordFactory([['boxer', 'It could be a man or a dog.'], ['compliment', 'Say something to make me smile.'], ['basketball', 'Nothing but net.'], ['hibernate', 'I can bare the cold.']]);\nconst {\n  makeElem, makeDashes, guesses, replace, inc\n} = HANGMAN;\nconst methodsArr = [makeElem, makeDashes, guesses, replace, inc];\n\nconst gameConfig = (words, methods) => {\n  const [makeElem, makeDashes, guesses, replace, inc] = methods;\n\n  // create and place elements into DOM when game inintally starts\n  const game = makeElem().addClass('game').appendTo(global.document.body);\n\n  const displayHeadScore = makeElem().addClass('display__heading').addClass('display__heading--score').appendTo(game);\n\n  const displayContentWord = makeElem().addClass('display__content').addClass('display__content--word').appendTo(game);\n\n  const wrongGuessesDiv = makeElem().addClass('wrong-guesses').appendTo(game);\n\n  const displayHeadHint = makeElem();\n\n  displayHeadHint.addClass('game__hint-head').addClass('display__heading').addClass('display__heading--hint').appendTo(game).text('Hint');\n\n  const displayContentHint = makeElem().addClass('display__content').addClass('display__content--hint').html(`<p class=\"game-text hint-text\">${words[0].hint}</p>`).appendTo(game);\n\n  const { body } = global.document;\n\n  // set initial values for game\n\n  let input = [];\n\n  // this sets the count to zero\n  // the inc function returns zero when it is passed no arguments\n  // otherwise it takes a number as an argument and turns that number incremented by 1\n  // inc(5) is 5 + 1, which returns 6.\n\n  let count = inc();\n\n  let { word } = words[count];\n\n  let wins = 0;\n\n  let chances = 5;\n\n  let guessedLetters = [];\n\n  let puzzleWord = makeDashes(word);\n\n  // ############ SETTING INITIAL DOM ELEMENTS ###############\n  const winsDiv = makeElem().addClass('game__score--wins').html(`wins: <span class=\"game__score--tally\">${wins}</span>`).appendTo(displayHeadScore);\n  const chancesDiv = makeElem().addClass('game__score--chances').html(`chances: <span class=\"game__score--tally\">${chances}</span>`).appendTo(displayHeadScore);\n\n  const wordProgressDiv = makeElem().addClass('game-text').addClass('display__content--text').html(puzzleWord).appendTo(displayContentWord);\n\n  const modalBackdrop = makeElem().addClass('modal__backdrop').hide().appendTo(body);\n  const modal = makeElem().addClass('modal').appendTo(modalBackdrop);\n\n  const modalMessage = makeElem().addClass('modal--message').appendTo(modal);\n\n  let canIncScores = true;\n  let acknowledgeGuesses = true;\n\n  const softReset = () => {\n    guessedLetters = [];\n    count = inc(count);\n    word = words[count].word;\n    puzzleWord = makeDashes(word);\n    input = [];\n    chances = 5;\n    wordProgressDiv.text(`Word so far: ${puzzleWord}`);\n    // print hint to screen\n    displayContentHint.html(`<p class=\"game-text hint-text\">${words[count].hint}</p>`).addClass('display__content');\n\n    wrongGuessesDiv.empty();\n  };\n\n  // RESTARTS GAME -- STARTS FROM THE BEGINNING\n  const hardReset = () => {\n    guessedLetters = [];\n    canIncScores = true;\n    count = inc();\n    word = words[count].word;\n    puzzleWord = makeDashes(word);\n    input = [];\n    chances = 5;\n    wins = 0;\n    wordProgressDiv.html(puzzleWord);\n    // print hint to screen\n    displayContentHint.html(`<p class=\"game-text hint-text\">${words[count].hint}</p>`);\n    wrongGuessesDiv.empty();\n  };\n\n  // COMMENCE GAME WHEN USER PRESSES THE ENTER KEY\n  body.onkeyup = e => {\n    const isAlphabet = str => /^[a-zA-Z()]$/.test(str);\n\n    // capture key stroke\n    let { key, ctrlKey } = e;\n\n    // if key is a letter turn it to lower case and reassign it to back to key\n    if (isAlphabet(key)) key = key.toLowerCase();\n\n    // only precede if CTRL isn't pressed along with alphabet key\n    if (ctrlKey) return;\n\n    //\n    const userGuess = guesses(word, key);\n\n    // this function tests the key entered to find out if it is an alphabetical character\n    const alphabetTestPast = isAlphabet(key);\n\n    // spread array and push them into the input array\n    if (acknowledgeGuesses) input.push(...userGuess);\n\n    puzzleWord = replace(puzzleWord, input);\n\n    // ############## USER GUESSED WRONG #############\n    if (!words[count].isIncluded(key) && canIncScores === true && chances >= 1 && alphabetTestPast && !guessedLetters.includes(key)) {\n      chances--;\n      guessedLetters.push(key);\n      makeElem().addClass('wrong-letter').text(key).appendTo(wrongGuessesDiv);\n\n      wrongGuessesDiv.addClass('wiggle-animation');\n\n      setTimeout(() => {\n        wrongGuessesDiv.removeClass('wiggle-animation');\n      }, 1000);\n    }\n\n    // ########## USER EXHAUSTS ALL HIS GUESSES ##############\n    if (!chances) {\n      acknowledgeGuesses = false;\n      // alert('You lost!');\n      // count = inc();\n      modalMessage.html(`<span class=\"modal__heading--loss\">You lose!</span> \n            <br> \n            The word was <span class=\"modal__notable--loss\">\"${words[count].word}\"</span>\n            <br>\n            Press <span class=\"modal__notable--loss\">\"Enter\"</span> to start over.`);\n      modalBackdrop.show();\n      if (key === 'Enter') {\n        count = inc();\n        wins = inc();\n        modalBackdrop.hide();\n        wrongGuessesDiv.empty();\n        acknowledgeGuesses = true;\n        word = words[count].word;\n        puzzleWord = makeDashes(word);\n        input = [];\n        chances = 5;\n        wordProgressDiv.html(puzzleWord);\n        // print hint to screen\n        displayContentHint.html(`<p class=\"game-text hint-text\">${words[count].hint}</p>`);\n        winsDiv.html(`wins: <span class=\"game__score--tally\">${wins}</span>`);\n      }\n    }\n\n    // print hint to screen\n    displayContentHint.html(`<p class=\"game-text hint-text\">${words[count].hint}</p>`);\n\n    // ################ USER GOT ALL THE LETTERS ###############\n    if (words[count].isMatched(puzzleWord)) {\n      if (canIncScores) wins++;\n      canIncScores = false;\n      winsDiv.html(`wins: <span class=\"game__score--tally\">${wins}</span>`);\n      wordProgressDiv.text(`Word so far: ${puzzleWord}`);\n      // print hint to screen\n      displayContentHint.html(`<p class=\"game-text hint-text\">${words[count].hint}</p>`);\n      // modalWordDisplay.text(puzzleWord);\n      modalMessage.html(`<h2 class=\"modal__heading--win\">Congratulations!</h2> \n                \n                <p class=\"modal__notable\">You're correct. The word's <span class=\"modal__notable--win\">\"${puzzleWord}\"</span>\n                Press <span class=\"modal__notable--win\">\"Enter\"</span> to attempt the next word.</p>`);\n      modalBackdrop.show();\n\n      //  player completed every word -----TODO-----\n      if (wins === words.length) {\n        modalMessage.html(`\n                    <h1 class=\"modal__heading--win\">Congratulations</h1>\n                    <p class=\"modal--message\">You've found all the words. Press Enter to over</p>\n                 `);\n      }\n\n      // move to next word when the user presses enter\n      if (key === 'Enter') {\n        canIncScores = true;\n        // ###### USER GOT ALL THE WORDS ########\n        if (words[count] !== words[words.length - 1]) {\n          //  to next word and reset negative record regarding eat individual word\n          softReset();\n          modalBackdrop.hide();\n        } else {\n          // the game resets when all the words have been solved\n          hardReset();\n          modalBackdrop.hide();\n        }\n      }\n    }\n\n    chancesDiv.html(`chances: <span class=\"game__score--tally\">${chances}</span>`);\n    winsDiv.html(`wins: <span class=\"game__score--tally\">${wins}</span>`);\n    wordProgressDiv.html(puzzleWord);\n  };\n};\n\n// =================== EVENT HANDLER FOR STARTING GAME=======================\nconst handleKeypress = e => {\n  const { key, target } = e;\n\n  const intro = global.document.querySelector('.intro');\n\n  if (key === 'Enter') {\n    gameConfig(gameWords, methodsArr);\n    intro.classList.add('intro--remove');\n\n    // remove listener so that this function is only run once, \n    // when the user initially comes to the site\n    target.removeEventListener('keypress', handleKeypress);\n    target.removeEventListener('click', handleKeypress);\n  }\n};\n\nfunction handleClick(e) {\n  const { target } = e;\n\n  const intro = global.document.querySelector('.intro');\n\n  intro.classList.add('intro--remove');\n  gameConfig(gameWords, methodsArr);\n\n  target.removeEventListener('click', handleClick);\n  global.document.body.removeEventListener('keypress', handleKeypress);\n}\n\nglobal.document.body.addEventListener('keypress', handleKeypress);\nconst introText = global.document.querySelector('.intro--text');\nintroText.onclick = handleClick;\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XG59IGNhdGNoKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcblx0XHRnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZS9tYWluLnNjc3M/NDYwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3N0eWxlL21haW4uc2Nzc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ })
/******/ ]);